<?xml version="1.0" encoding="UTF-8"?>
<data>

    <DAVOS
        ExperimentalDesignBuilder = "off"
        Implementation = "off"
        FaultInjection = "on"
        RegressionAnalysis = "off"
        OptimizationMCDM = "off" >
    </DAVOS>

    
    <!-- platform: Multicore / Grid / GridLight 
        #RUNDIR - path from where SBFI tool is launched
    -->
    <FaultInjection
        platform = "GridLight"
        initializer_phase = "off"    
        profiler_phase = "off"
        injector_phase = "off"
        reportbuilder_phase = "on"
        report_dir = "#RUNDIR/../../../HTWEB/EDCC2018/Test"        
        dbfile = "PIC_InjectionResult.db"        
        >
          <!-- 
            design_type: RTL / NETLIST
                if RTL: faults are injected into signals and variables
                if Netlist: faults are injected into primitives according to the library_specification
            library_specification: leave it blank if design_type = RTL
        -->
        <Generic
            design_type = "NETLIST"
            library_specification = "LibSpec_simprim.xml"
            compile_script = "../par_compile.do"
            run_script = "../par_run.do"		
            std_clk_period = "10.0"
            std_rst_delay = "0"
            std_init_time =  "100"
            std_workload_time = "44500"
            finish_flag = ""
        />
        

        <!-- 
            observe_outputs =  no / yes / notrigger
                no: outputs are not included into observation list
                yes: outputs are observed, new sample is appended at any transition of any of output signals
                notrigger: outputs are included into observation list, but sampling is not triggered by their transitions
        -->
        
        <Initializer
                virtual_register_reconstruction = "on"				
                observe_outputs = "notrigger"                
                build_injection_list   = "on"
                build_dump_init_script = "on"		
                match_pattern_file = ""			
            >
            
                

            <InjectionScope node_prefix = "" unit_path = "/test_pic_core_vhd/uut/" />
            <ObservationScope node_prefix = "" unit_path = "/test_pic_core_vhd/uut/" label_prefix = "" sampling_options = "-notrigger"/>
            
                                   
            <!-- location: INTERNALS / OUTPUTS -->            
            <GenericObservationNodes>
                <signal 		location = "OUTPUTS" 	options = "" 			label = "PORT_A" 		path= "sim:/test_pic_core_vhd/uut/port_a"  comment="PORT_A" />				
                <signal 		location = "OUTPUTS" 	options = "" 			label = "PORT_B" 		path= "sim:/test_pic_core_vhd/uut/port_b"  comment="PORT_B" />				
                <signal 		location = "OUTPUTS" 	options = "" 			label = "PORT_C" 		path= "sim:/test_pic_core_vhd/uut/port_c"  comment="PORT_C" />				
            </GenericObservationNodes>
        </Initializer>



        <!-- ColdRestore/WarmRestore - cold checkpoint restore /    -->
        <Injector
                checkpont_mode = "WarmRestore"
                maxproc = "140"
                workload_split_factor = "30"			
                campaign_label = "PIC_IMPL"		
                cleanup_folders="on"
                compile_project = "off"
                create_scripts="on"
                create_checkpoints="off"
                create_precise_checkpoints = "off"
                create_injection_scripts = "on"
                run_faultinjection="on"
                remove_par_lib_after_checkpoint_stored = "on"
                cancel_pending_tasks = "off"
                
                sim_time_checkpoints = "16:00:00"
                sim_time_injections =  "20:00:00"
                work_label = "simpy_"
                wlf_remove_time = "500"	
                runtime_terminate = "off"
                run_cleanup = "on"
                monitoring_mode = "on"
            >	


            

            

    <!-- # for current value, $SCALE to multiply by scaling factor for given configuration -->

            
		<fault_model
			model = "bit_flip"
			target_logic = "X_FF, X_SFF, X_FDD"
			faults_per_target = "1"
			time_mode = "Relative"
			injection_time_start = "0.0"            
			injection_time_end = "1.0"
            increment_time_step = "0.0" 
            experiments_per_target = "1"
            sample_size = "38500"
			rand_seed	= "3"					
		/>	
    
        </Injector>
            

        <Analyzer
            report_dir = ""
            unpack_from_dir = ""        
            detect_failures_at_finish_time = "on"
            error_flag_signal = ""
            error_flag_active_value = ""
            trap_type_signal = ""                         
            neg_timegap = "0"
            pos_timegap = "1000"
            check_duration_factor = "0"           
            threads = "4"
            >		    
        
            <join_groups>

            
            </join_groups>
            
            <rename_list>
                
            </rename_list>	
            
        </Analyzer>	
            
       <ReportBuilder                    
            write_html_dumps = "off"
            dynamic_linking = "on"
            hierarchical_error_analysis = "off"
            trap_types_description_file = ""
            split_by_time_intervals = "off"
            split_by_activity_duration_interval = ""
            split_by_effective_switches_intervals = ""		
            normalize_by_workload_duration = "off"
            split_by_logic_type = ""	
            split_by_profiled_value = ""	
            memory_saving_mode = "on"
            default_logic_type = "X_FF" 
         />       

        
        
        <config
            work_dir = "../../../Projects/Controllers/PIC/PIC_VHDL_IMPL"
            label = "PIC_IMPL"
            compile_options = ""
            run_options = ""
            clk_period = "10.0"
            start_from = ""
            stop_at = ""
        />

        
        <config
            work_dir = "../../../Projects/Controllers/PIC/PIC_VHDL_RTL"
            label = "PIC_RTL"
            compile_options = ""
            run_options = ""
            clk_period = "10.0"
            start_from = ""
            stop_at = ""
        />




    </FaultInjection>
    
</data>
