<?xml version="1.0" encoding="UTF-8"?>
<data>

    <DAVOS
        DesignBuilder = "off"
        FaultInjection = "on"
        DecisionSupport = "off"
        report_dir = "#RUNDIR/../../HTWEB/AVR"        
        dbfile = "AVRSIM.db"  >
        

        <ExperimentalDesign
            max_proc = "2"
            retry_attempts = "2"            
            overwrite_existing = "on"            
            build_factorial_design = "on"
            implement_design = "on"
            implement_default_config = "off"
            build_testbench_random_inputs = "off"		
            simulate_switching_activity = "on"
            only_update_testbench = "off"		
            first_index = ""
            last_index = ""	        
        >
            
            <generic            
                custom_parameters = "{ }"
                                              
                design_label = "AVR"
                design_dir = ""
                template_dir = ""
                log_dir = ""
                netlist_dir = ""
                constraint_file = ""                
                
                
                clk_net = "clk"
                rst_net = ""		                        
                testbench_template_file = ""
                sim_project_file = ""
                testbench_file = ""
                testbench_top_unit = ""
                clk_constant = ""
                uut_root = "/core_tb/uut"
                std_start_time 	= "0"
                std_observation_time 	= "9000"
                std_clock_period = "19.0"
                
            />        

            
            <ImplementationFlow name = "XilinxIseBuildScript" EntryPhase = "" >            

            </ImplementationFlow>
            

            
            <factorial_design table_of_factors = "" resolution = "4" >
 
                
            </factorial_design>            
        
        </ExperimentalDesign>
    
    
    
        <!-- platform: Multicore / Grid / GridLight 
            #RUNDIR - path from where SBFI tool is launched
        -->
        <FaultInjection
            platform = "Multicore"
            initializer_phase = "on"    
            profiler_phase = "off"
            injector_phase = "on"
            reportbuilder_phase = "on"    
            >
              <!-- 
                design_type: RTL / NETLIST
                    if RTL: faults are injected into signals and variables
                    if Netlist: faults are injected into primitives according to the library_specification
                library_specification: leave it blank if design_type = RTL
            -->
            <Generic
                design_type = "NETLIST"
                library_specification = "./FaultDictionaries/Xilinx_Unisim_VHDL.xml"
                compile_script = "./sim_compile.do"
                run_script = "./sim_run.do"	
                std_clk_period = "50.0"
                std_rst_delay = "0"
                std_init_time =  "0"
                std_workload_time = "600000"
                finish_flag = ""
            />
            

            <!-- 
                observe_outputs =  no / yes / notrigger
                    no: outputs are not included into observation list
                    yes: outputs are observed, new sample is appended at any transition of any of output signals
                    notrigger: outputs are included into observation list, but sampling is not triggered by their transitions
            -->
            
            <Initializer
                    virtual_register_reconstruction = "on"				
                    observe_outputs = "notrigger"                
                    build_injection_list   = "on"
                    build_dump_init_script = "on"		
                    match_pattern_file = ""			
                >
                
                    
            <!-- unit path: withing the design scope-->            
                <InjectionScope node_prefix = ""   unit_path = "/core_tb/uut/" />

                <ObservationScope node_prefix = "" unit_path = "/core_tb/uut/" label_prefix = "" sampling_options = "-notrigger"/>

                    
                    <!-- location: INTERNALS / OUTPUTS -->            
                <GenericObservationNodes>
                   <memarray 	location = "OUTPUTS" 	options = "" 		label = "DRAM_EVEN" 	path= "/core_tb/uut/dpath/sram/data_mem_even/U0/inst_blk_mem_gen/\gnbram.gnativebmg.native_blk_mem_gen\/\valid.cstr\/\ramloop[0].ram.r\/\prim_init.ram\/\DEVICE_7SERIES.NO_BMM_INFO.SP.SIMPLE_PRIM18.ram\/TDP/RAMB18E1_TDP_inst/prcs_clk/mem" low_address = "84" high_address = "103" comment="Data Memory" />		
                   <memarray 	location = "OUTPUTS" 	options = "" 		label = "DRAM_ODD" 		path= "/core_tb/uut/dpath/sram/data_mem_odd/U0/inst_blk_mem_gen/\gnbram.gnativebmg.native_blk_mem_gen\/\valid.cstr\/\ramloop[0].ram.r\/\prim_init.ram\/\DEVICE_7SERIES.NO_BMM_INFO.SP.SIMPLE_PRIM18.ram\/TDP/RAMB18E1_TDP_inst/prcs_clk/mem" low_address = "84" high_address = "103" comment="Data Memory" />		
                   
                </GenericObservationNodes>
            </Initializer>



            <!-- ColdRestore/WarmRestore - cold checkpoint restore /    -->
            <Injector
                    checkpont_mode = "ColdRestore"
                    maxproc = "8"
                    workload_split_factor = "10"			
                    campaign_label = "AVR_UNISIM"		
                    cleanup_folders="on"
                    compile_project = "off"
                    create_scripts="on"
                    create_checkpoints="on"
                    create_precise_checkpoints = "on"
                    create_injection_scripts = "on"
                    run_faultinjection="on"
                    remove_par_lib_after_checkpoint_stored = "off"
                    cancel_pending_tasks = "off"
                    
                    sim_time_checkpoints = "16:00:00"
                    sim_time_injections =  "20:00:00"
                    work_label = "avr_unisim_"
                    wlf_remove_time = "500"	
                    runtime_terminate = "off"
                    run_cleanup = "on"
                    monitoring_mode = "on"
                >	


                

                

                <!-- # for current value, $SCALE to multiply by scaling factor for given configuration -->                
                <fault_model
                    model = "bit_flip"
                    target_logic = "FDRE"
                    faults_per_target = "1"
                    time_mode = "Relative"
                    injection_time_start = "0.0"            
                    injection_time_end = "1.0"
                    increment_time_step = "0.0" 
                    experiments_per_target = "1"
                    sample_size = "1000"
                    rand_seed	= "2"					
                />	
        
            </Injector>
                

            <Analyzer
                report_dir = "#RUNDIR/../../HTWEB/AVR"
                unpack_from_dir = ""        
                detect_failures_at_finish_time = "on"
                error_flag_signal = ""
                error_flag_active_value = ""
                trap_type_signal = ""                         
                neg_timegap = "0"
                pos_timegap = "1000"
                check_duration_factor = "0"           
                threads = "4"
                >		    
            
                <join_groups>
                
                </join_groups>
                
                <rename_list>
                    
                </rename_list>	
                
            </Analyzer>	
                
           <ReportBuilder                    
                write_html_dumps = "off"
                dynamic_linking = "on"
                hierarchical_error_analysis = "off"
                trap_types_description_file = ""
                split_by_time_intervals = "off"
                split_by_activity_duration_interval = ""
                split_by_effective_switches_intervals = ""		
                normalize_by_workload_duration = "off"
                split_by_logic_type = ""	
                split_by_profiled_value = ""	
                memory_saving_mode = "on"
                default_logic_type = "SIGNAL" 
             />       

            
            
            <config
                work_dir = "../../Projects/ZYBO_Hello_World"
                label = "AVR"
                compile_options = ""
                run_options = ""
                clk_period = "50.0"
                start_from = ""
                stop_at = ""
            />

        </FaultInjection>
    
    
    <DecisionSupport>
    
        <DerivedMetrics>
            <DerivedMetric
                name = "MTTF_K_21"
                handler = "DeriveMTTF"
                custom_arg = "{'k': 21, 'fit.x_lut': 107E-15, 'fit.x_ff': 2E-15}"
            />
        </DerivedMetrics>
        
    </DecisionSupport>
    
    </DAVOS>
    
</data>
